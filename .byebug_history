pp refactor_map
continue
pp refactor_map
continue
compare_arrays_of_hashes(refactor_map, cloned_map)
refactor_map != cloned_map
pp cloned_map
pp refactor_map
continue
pp thing
n
continue
self.indexes_removed[0]
end_placeholder[:paragraph_index]
nd_placeholder[:paragraph_index]
start_placeholder[:paragraph_index]
continue
self.indexes_removed[0]
pp thing
n
placeholders.length
pp thing
n
continue
pp thing
n
end_placeholder[:paragraph_index]
start_placeholder[:paragraph_index]
self.indexes_removed
indexes_removed
pp mapped2
mapped2
indexes_removed
continue
m
thing
n
indexes_removed
pp mapped2
mapped2
indexes_removed
paragraphs_to_remove
my_set
pp mapped2
n
mapped2
n
self.indexes_removed
self.paragraphs_to_remove
should_keep
continue
should_keep
continue
self.paragraphs_to_remove
self.indexes_removed
continue
self.indexes_removed
self.paragraphs_to_remove
continue
self.paragraphs_to_remove
self.indexes_removed
continue
self.indexes_removed
self.paragraphs_to_remove
continue
self.paragraphs_to_remove
self.indexes_removed
my_set
continue
self.indexes_removed
self.paragraphs_to_remove
my_set
set
n
indexes_removed
self.paragraphs_to_remove
n
pp mapped2
n
should_keep
n
pp mapped2
continue
pp refactor_map
pp cloned_map
continue
n
pp mapped2
mapped2
continue
exit
pp refactor_map
pp cloned_map
continue
n
should_keep
continue
pp mapped2
continue
pp mapped2
continue
pp mapped2
mapped2
should_keep
uniq
pp cloned_map
pp refactor_map
pp cloned_map
pp refactor_map
pp mapped2
self.indexes_removed
self.paragraphs_to_remove
self.blank_runs_count
pp mapped2
pp thing
n
should_keep
continue
pp cloned_map
pp refactor_map
refactor_map
n
pp mapped2
mapped2
pp refactor_map
pp cloned_map
pp refactor_map
pp cloned_map
pp refactor_map
pp cloned_map
pp refactor_map
exit
continue
pp cloned_map
pp refactor_map
n
s
n
should_keep
continue
pp cloned_map
pp refactor_map
n
s
n
continue
e.message
n
should_keep
n
continue
reindex_placeholders_new(placeholders, self.range_to_remove)
start_placeholder[:paragraph_index]
self.paragraphs_to_remove
n
pp mapped2
should_keep
continue
should_keep
exit
pp cloned_map
pp refactor_map
refactor_map != cloned_map
n
s
n
range_to_remove
n
should_keep
n
refactor_map == cloned_map
pp cloned_map
pp refactor_map
refactor_map != cloned_map
n
s
n
pp thing
n
new_end_placeholders.length
new_start_placeholders.length
n
pp mapped2
pp mapped_2
pp refactor_map
index
{% if !fields.d %}index
pp refactor_map
pp cloned_map
pp refactor_map
pp cloned_map
exit
n
refactor_map == cloned_map
n
pp cloned_map
pp refactor_map
n
s
n
pp mapped2
n
should_keep
continue
pp cloned_map
pp refactor_map
n
s
n
pp cloned_map
pp refactor_map
refactor_map
n
s
n
pp thing 
pp cloned_map
pp refactor_map
pp cloned_map
pp refactor_map
pp cloned_map
pp refactor_map
pp cloned_map
pp refactor_map
pp cloned_map
pp refactor_map
continue
pp mapped2
n
should_keep
n
ststart_placeholder[:paragraph_index]
pp thing 
n
range_to_remove
n
should_keep
n
nh
n
continue
e.message
n
continue
pp cloned_map
pp refactor_map
refactor_map
refactor_map != cloned_map
n
s
n
pp thing 
n
continue
should_keep
n
